// Mocks generated by Mockito 5.4.0 from annotations
// in casino_test/test/src/data/repository_impl/characters_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:casino_test/src/domain/form/get_page_form.dart' as _i5;
import 'package:casino_test/src/domain/models/character.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

import 'characters_repository_impl_test.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCharacterList_0 extends _i1.SmartFake implements _i2.CharacterList {
  _FakeCharacterList_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MockCharacterRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMockCharacterRemoteDataSource extends _i1.Mock
    implements _i3.MockCharacterRemoteDataSource {
  MockMockCharacterRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.CharacterList> getCharacters(
          {required _i5.GetCharactersFormParams? getCharactersFormParams}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCharacters,
          [],
          {#getCharactersFormParams: getCharactersFormParams},
        ),
        returnValue: _i4.Future<_i2.CharacterList>.value(_FakeCharacterList_0(
          this,
          Invocation.method(
            #getCharacters,
            [],
            {#getCharactersFormParams: getCharactersFormParams},
          ),
        )),
      ) as _i4.Future<_i2.CharacterList>);
}

/// A class which mocks [MockNetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockMockNetworkInfo extends _i1.Mock implements _i3.MockNetworkInfo {
  MockMockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
